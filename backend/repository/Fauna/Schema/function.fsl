@role("server")
function CreateProject(data,id){
  let User = User.byId(id)
  let project = Projects.create(data)
  project.updateData({Owner: User})
  project
}

@role("server")
function LoginUser(email,password) {

 let user = User.byEmail(email)?.first()
  Credential.byDocument(user)
    ?.login(password, Time.now().add(60, "minutes"))
}


@role("server")
function Signup(value: {*: Any}): {*: Any} {
  let user = User.create({
    email: value['email'],
    firstName: value['firstName'],
    lastName: value['lastName'],
    tasks: null,
    accessLevel: value['accessLevel'],
    status: value['status'],
  })

  let credential = Credential.create({
    document: user,
    password: value["password"]
  })

  Object.assign({}, credential)
}


@role("server")
function LogoutUser() {

  Query.token()!.delete()
}

@role("server")
function CreateOwner(userId,teamId) {
  let user = User.byId(userId)
  let team = Team.byTeamId(teamId).first()
  let owner = Owner.create({User:user,Teams:[team]})
  
  Token.create(
    {
      document: owner
    }
  )

  Token
}

@role("server")
function CreateTask(data)
{
  Task.create(data);
}


function UpdateNotes(data:{*: Any}): {*: Any} {
  let notes = Notes.byId(data["id"])!.update(data)
  notes
}


function CheckOwnerExist(userId) {
  let check = Owner.where(.User.Id == userId)!.first()!.exists()
  check
}